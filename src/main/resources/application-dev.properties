# ===============================
# CONFIGURAZIONE GENERALE (SVILUPPO PUBBLICO)
# ===============================
server.port=8080

# ===============================
# DATABASE CONFIGURATION (PostgreSQL)
# ===============================
# Le credenziali del DB locale non sono sensibili, ma puoi metterle nel file privato se vuoi nasconderle.
# Le lasciamo qui, come fai tu, assumendo siano credenziali di sviluppo locali (postgres/root).
spring.datasource.url=jdbc:postgresql://localhost:5432/gdlRaccoglitori
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate/JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false   

# ===============================
# JWT CONFIGURATION (USA PLACEHOLDER)
# ===============================
# La chiave JWT è sensibile e usa il placeholder.
jwt.secret=${JWT_SECRET_KEY}
app.jwtExpirationMs=86400000

# ===============================  
# EMAIL CONFIGURATION (USA PLACEHOLDERS)
# ===============================
spring.mail.host=smtp.gmail. 
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD} # Usa la App Password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ===============================
# OAuth2 CONFIGURATION (USA PLACEHOLDERS)
# ===============================
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/cinema/oauth2/callback/google
spring.security.oauth2.client.registration.google.scope=openid,profile,email

spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID}
spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET}
spring.security.oauth2.client.registration.facebook.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v20.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v20.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email
spring.security.oauth2.client.provider.facebook.user-name-attribute=id

spring.security.oauth2.client.registration.microsoft.client-id=${MICROSOFT_CLIENT_ID}
spring.security.oauth2.client.registration.microsoft.client-secret=${MICROSOFT_CLIENT_SECRET}
spring.security.oauth2.client.registration.microsoft.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.microsoft.scope=openid,profile,email
spring.security.oauth2.client.registration.microsoft.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.provider.microsoft.jwk-set-uri=https://login.microsoftonline.com/common/discovery/v2.0/keys
spring.security.oauth2.client.provider.microsoft.authorization-uri=https://login.microsoftonline.com/common/oauth2/v2.0/authorize
spring.security.oauth2.client.provider.microsoft.token-uri=https://login.microsoftonline.com/common/oauth2/v2.0/token
spring.security.oauth2.client.provider.microsoft.user-info-uri=https://graph.microsoft.com/oidc/userinfo
spring.security.oauth2.client.provider.microsoft.user-name-attribute=sub

# URL di reindirizzamento al frontend locale
custom.oauth2.authorized-redirect-uri=http://localhost:4200/social-login-callback

# ===============================
# CORS CONFIGURATION (SVILUPPO)
# ===============================
cors.allowed-origins=http://localhost:4200

# ===============================
# LOGGING (SVILUPPO)
# ===============================
logging.level.org.hibernate=DEBUG
logging.level.org.springframework=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web.filter.OncePerRequestFilter=DEBUG

server.error.include-binding-errors=always
server.error.include-stacktrace=always
server.error.include-exception=true
